# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'azure-acr-build-push-service-connection'
  imageRepository: 'app/nginx'
  containerRegistry: 'raiaksregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.SourceVersion)'
  imagePullSecret: 'raiaksregistry-image-pull-secret'


stages:
- stage: Build
  displayName: Build and push image to azure acr
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: SelfHosted
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
        
    # Task-3: Publish build artifacts (Publish build to Azure Pipelines)           
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'kube-manifests'
        publishLocation: 'Container'

- stage: Deploy_to_dev
  displayName: Deploy to dev namepsapce
  dependsOn: Build 

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      name: SelfHosted
    environment: 'aks-dev-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)-dev
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              kubernetesServiceConnection: aks-dev-env-rai-dev-1700058482509

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/kube-manifests/deployment.yml
                $(Pipeline.Workspace)/kube-manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)-dev
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
              kubernetesServiceConnection: aks-dev-env-rai-dev-1700058482509

- stage: Deploy_to_test
  displayName: Deploy to test namepsapce
  dependsOn: Deploy_to_dev 

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      name: SelfHosted
    environment: 'aks-test-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)-test
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              kubernetesServiceConnection: aks-test-env-rai-test-1700058521772

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/kube-manifests/deployment.yml
                $(Pipeline.Workspace)/kube-manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)-test
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
              kubernetesServiceConnection: aks-test-env-rai-test-1700058521772

- stage: Deploy_to_staging
  displayName: Deploy to staging namepsapce
  dependsOn: Deploy_to_dev

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      name: SelfHosted
    environment: 'aks-staging-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)-staging
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              kubernetesServiceConnection: aks-staging-env-rai-staging-1700058551910

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/kube-manifests/deployment.yml
                $(Pipeline.Workspace)/kube-manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)-staging
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
              kubernetesServiceConnection: aks-staging-env-rai-staging-1700058551910

- stage: Deploy_to_prod
  displayName: Deploy to staging namepsapce
  dependsOn: Deploy_to_staging

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      name: SelfHosted
    environment: 'aks-prod-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)-prod
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              kubernetesServiceConnection: aks-prod-env-rai-prod-1700058579938

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/kube-manifests/deployment.yml
                $(Pipeline.Workspace)/kube-manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)-prod
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
              kubernetesServiceConnection: aks-prod-env-rai-prod-1700058579938
    
